var Users=require("mongoose").model("Users"),passport=require("passport"),localPassport=require("passport-local"),crypto=require("crypto"),GoogleStrategy=require("passport-google").Strategy,nodemailer=require("nodemailer"),smtpTransport=require("nodemailer-smtp-transport");passport.use(new localPassport(function(e,r,s){Users.findOne({username:e}).exec(function(e,n){if(e){console.log("Error loading user: "+e);return}if(n&&n.confirmedEmail&&n.authenticate(r)){return s(null,n)}else{return s(null,false)}})}));passport.serializeUser(function(e,r){if(e){r(null,e._id)}});passport.deserializeUser(function(e,r){Users.findOne({_id:e}).exec(function(e,s){if(s){return r(null,s)}else{return r(null,false)}})});function generateSalt(){return crypto.randomBytes(128).toString("base64")}function generateHashedPassword(e,r){var s=crypto.createHmac("sha1",e);return s.update(r).digest("hex")}function randomString(e){var r="0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz";var s=e;var n="";for(var o=0;o<s;o++){var t=Math.floor(Math.random()*r.length);n+=r.substring(t,t+1)}return n}module.exports={userAuth:function(e,r,s){var n=passport.authenticate("local",function(n,o){if(n)return s(n);if(!o)r.send({success:false});e.logIn(o,function(e){if(e)return s(e);r.send({success:true,user:{username:o.username}})})});n(e,r,s)},userLogout:function(e,r,s){e.logOut();r.send({success:true})},createUser:function(e,r,s){var n=e.body;Users.findOne({username:n.username}).exec(function(s,o){if(o){r.send({success:false,reason:"This username exists already!"});return}Users.findOne({email:n.email}).exec(function(s,o){if(o){r.send({success:false,reason:"User with this email address exists already!"});return}n.salt=generateSalt();n.hashPass=generateHashedPassword(n.salt,n.password);n.confirmedEmail=false;n.randomIdForEmailConfirmation=randomString(40);var t=new Date;n.expirationConfirmationTime=t.setHours(t.getHours()+24);n.host=e.get("host");Users.create(n,function(s,o){if(s){return r.send({success:false,reason:s.toString()})}var t="http://"+e.get("host")+"/verify?id="+n.randomIdForEmailConfirmation;var i=nodemailer.createTransport(smtpTransport({service:"Gmail",auth:{user:"deffered1234@gmail.com",pass:"deffered4321"},tls:{rejectUnauthorized:false}}));var a={from:"Bokluci.bg <deffered1234@gmail.com>",to:n.email,subject:"Please confirm your Email account!",html:"Hello,<br> Please Click on the link to verify your email.<br><a href="+t+">Click here to verify</a><br> The confirmation should be done within 24 hours!"};i.sendMail(a,function(e,s){if(e){console.log(e);return r.send({success:false,reason:e.toString()})}else{r.send({success:true,reason:"Confirmation Message has been sent to your E-mail!"})}})})})})},verifyUser:function(e,r,s){Users.findOne({randomIdForEmailConfirmation:e.query.id}).exec(function(s,n){if(s){console.log("No such user exists! ");r.end("<h1>No such user exists!");return}if(n){if(e.protocol+"://"+e.get("host")=="http://"+n.host){console.log("Domain is matched. Information is from Authentic email");if(n.confirmedEmail){r.redirect("/");return}var o=new Date;if(o>n.expirationConfirmationTime){Users.remove({_id:n._id},function(e,r){if(e){console.log("Error after user removing: "+e)}});r.end("<h1>Confirmation is too late.<br> You have to create new account!");return}Users.update({_id:n._id},{confirmedEmail:true},function(e,s){if(e){console.log("Error after user confirmation e-mail: "+e);r.end("<h1>Error after user confirmation e-mail: ")}})}else{r.end("<h1>Request is from unknown source");return}}else{r.end("<h1>No such user or confirmation is too late!");return}r.render("verified")})}};